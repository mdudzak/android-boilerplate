apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: '../config/quality/quality.gradle'

android {
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId 'sk.company.androidboilerplate'
        minSdkVersion 16
        targetSdkVersion 25
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1
        versionName '0.1.0'
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'alias'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    final PLAY_SERVICES_VERSION = '10.0.1'
    final SUPPORT_LIBRARY_VERSION = '25.1.0'
    final BUTTERKNIFE_VERSION = '8.4.0'
    final DAGGER_VERSION = '2.8'
    final RXJAVA_VERSION = '2.0.4'
    final HAMCREST_VERSION = '1.3'
    final DEXMAKER_VERSION = '1.4'
    final MOCKITO_VERSION = '2.6.3'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final RETROFIT_VERSION = '2.1.0'
    final MOSHI_VERSION = '1.3.1'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    annotationProcessor 'com.squareup:javapoet:1.8.0'

    // Android support
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // GLIDE
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    // SQUARE & JACK WHARTON
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.moshi:moshi:$MOSHI_VERSION"
    compile "com.squareup.retrofit2:converter-moshi:$RETROFIT_VERSION"
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    compile 'com.jakewharton.timber:timber:4.3.1'
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    debugCompile 'com.squareup.haha:haha:2.0.3'

    // RXJAVA & RXANDROID (ver. 2)
    compile "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
    compile "io.reactivex.rxjava2:rxandroid:2.0.1"

    // AUTOPARCEL
    compile 'nz.bradcampbell:paperparcel:2.0.0-beta2'
    compile 'nz.bradcampbell:paperparcel-kotlin:2.0.0-beta2' // Optional
    kapt 'nz.bradcampbell:paperparcel-compiler:2.0.0-beta2'

    // Dagger 2
    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    kapt daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testCompile 'org.robolectric:robolectric:3.1'
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
repositories {
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1/'
    }
}
//TODO - add google-service.json
//apply plugin: 'com.google.gms.google-services'
